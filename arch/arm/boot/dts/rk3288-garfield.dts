/*
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "rk3288.dtsi"

/ {
	compatible = "rockchip,rk3288-garfield", "rockchip,rk3288";

	memory {
		device_type = "memory";
		reg = <0x0 0x80000000>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		autorepeat;

		pinctrl-names = "default";
		pinctrl-0 = <&pwrbtn>;

		button@0 {
			gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
			linux,code = <116>;
			label = "GPIO Key Power";
			linux,input-type = <1>;
			gpio-key,wakeup = <1>;
			debounce-interval = <100>;
		};
	};

	/* This turns on USB vbus for both host0 (ehci) and host1 (dwc2) */
	vcc_host: vcc-host-regulator {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio0 14 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&host_vbus_drv>;
		regulator-name = "vcc_host";
		regulator-always-on;
		regulator-boot-on;
	};

	vcc_sys: vsys-regulator {
		compatible = "regulator-fixed";
		regulator-name = "vcc_sys";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vcc_5v: v5v-regulator {
		compatible = "regulator-fixed";
		regulator-name = "vcc_5v";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	/*
	 * NOTE: vcc_sd isn't hooked up on v1.0 boards where power comes from
	 * vcc_io directly.  Those boards won't be able to power cycle SD cards
	 * but it shouldn't hurt to toggle this pin there anyway.
	 */
	vcc_sd: sdmmc-regulator {
		compatible = "regulator-fixed";
		gpio = <&gpio7 11 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&sdmmc_pwr>;
		regulator-name = "vcc_sd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		startup-delay-us = <100000>;
		vin-supply = <&vcc_io>;
	};

	ext_gmac: external-gmac-clock {
		compatible = "fixed-clock";
		clock-frequency = <125000000>;
		clock-output-names = "ext_gmac";
		#clock-cells = <0>;
	};

	gpio_reset {
		status = "okay";
		compatible = "rockchip,gpio-reset";
		reset-gpios = <&gpio7 21 GPIO_ACTIVE_HIGH>, <&gpio8 3 GPIO_ACTIVE_HIGH>;
		delay-time = <150>;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_reset &usb_hub_nreset>;
	};

	wireless-wlan {
		compatible = "zero-client,bcmdhd_wlan";
		status = "okay";
	};

	sound {
		compatible = "rockchip,rockchip-audio-rt5640";
		// rockchip,model = "I2S-RT5640";
		rockchip,model = "DAISY-I2S";
		rockchip,i2s-controller = <&i2s>;
		rockchip,audio-codec = <&rt5640>;
		hpdet-gpios = <&gpio7 6 GPIO_ACTIVE_HIGH>;
		micdet-gpios = <&gpio8 2 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&hp_det>, <&mic_det>;
	};

	panel: panel {
		compatible ="chimei,bn0701083a","simple-panel";
		status = "okay";
		power-supply = <&vcc_5v>;
	};
};

&cpu0 {
	cpu0-supply = <&vdd_cpu>;
};

&gpu {
	status = "okay";
	mali-supply = <&vdd_gpu>;
};

&dmc {
	status = "okay";
	logic-supply = <&vdd_log>;
	rockchip,odt-disable-freq = <333000000>;
	rockchip,dll-disable-freq = <333000000>;
	rockchip,sr-enable-freq = <333000000>;
	rockchip,auto-self-refresh-cnt = <0>;
	rockchip,auto-power-down-cnt = <64>;
	rockchip,ddr-speed-bin = <21>;
	rockchip,trcd = <10>;
	rockchip,trp = <10>;
	rockchip,pd-enable-freq = <533000000>;
	rockchip,dmc-disable-freq = <200000000>;
	operating-points = <
		/* KHz    uV */
		200000 1050000
		333000 1100000
		533000 1150000
		648000 1200000
	>;
};

&emmc {
	broken-cd;
	bus-width = <8>;
	cap-mmc-highspeed;
	mmc-hs200-1_8v;
	disable-wp;
	non-removable;
	num-slots = <1>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_clk &emmc_cmd &emmc_pwr &emmc_bus8>;
	status = "okay";
};

&gmac {
	status = "okay";

	phy-supply = <&vcc_sys>;

	phy-mode = "rgmii";
	clock_in_out = "input";

	assigned-clocks = <&cru SCLK_MAC>;
	assigned-clock-parents = <&ext_gmac>;

	pinctrl-names = "default";
	pinctrl-0 = <&rgmii_pins>, <&phy_rst>, <&phy_pmeb>, <&phy_int>;

	tx_delay = <0x20>;
	rx_delay = <0x10>;

	resets = <&cru SRST_MAC>;
	reset-names = "stmmaceth";

	/* These properties are not actually used in rgmii mode,
	 * but the documentation states they're still required
	 * (including the active-low flag). */
	snps,reset-gpio = <&gpio4 8 0>;
	snps,reset-active-low;
	snps,reset-delays-us = <0 10000 1000000>;
};


&edp {
	status = "okay";
	rockchip,panel = <&panel>;
};

&hdmi {
	ddc-i2c-bus = <&i2c5>;
	status = "okay";
};

&hdmi_audio {
	status = "okay";
};

&i2s {
	status = "okay";
	clock-names = "i2s_hclk", "i2s_clk", "i2s_clk_out";
	clocks = <&cru HCLK_I2S0>, <&cru SCLK_I2S0>, <&cru SCLK_I2S0_OUT>;

	assigned-clocks = <&cru SCLK_I2S0>,  <&cru SCLK_I2S0_PRE>, <&cru SCLK_I2S0_SRC>;
	assigned-clock-parents = <&cru SCLK_I2S0_PRE>, <&cru SCLK_I2S0_FRAC>, <&cru PLL_GPLL>;
};

&i2c0 {
	status = "okay";
	clock-frequency = <200000>;

	tps56520: tps56520@37 {
		compatible = "ti,tps56x";
		reg = <0x37>;
		status = "okay";
		regulators {
			#address-cells = <1>;
			#size-cells = <0>;
			vdd_cpu: regulator@0 {
				reg = <0>;
				regulator-compatible = "tps56x_dcdc1";
				regulator-name = "vdd_cpu";
				regulator-min-microvolt = <710000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
				regulator-boot-on;
				regulator-initial-mode = <0x2>;
				regulator-initial-state = <3>;
				regulator-state-mem {
					regulator-state-mode = <0x2>;
					regulator-state-disabled;
					regulator-state-uv = <900000>;
				};
			};
		};
	};

	tps56521: tps56521@35 {
		compatible = "ti,tps56x";
		reg = <0x35>;
		status = "okay";
		regulators {
		#address-cells = <1>;
			#size-cells = <0>;
			vdd_gpu: regulator@0 {
				reg = <0>;
				regulator-compatible = "tps56x_dcdc1";
				regulator-name = "vdd_gpu";
	                        regulator-min-microvolt = <712500>;
		                regulator-max-microvolt = <1500000>;
			        regulator-always-on;
				regulator-boot-on;
	                        regulator-initial-mode = <0x2>;
				regulator-initial-state = <3>;
	                        regulator-state-mem {
					regulator-state-mode = <0x2>;
					regulator-state-enabled;
					regulator-state-uv = <900000>;
				};
			};
		};
        };

	act8846: act8846@5a {
		compatible = "active-semi,act8846";
		reg = <0x5a>;
		status = "okay";
		system-power-controller;

		vp1-supply = <&vcc_sys>;
		vp2-supply = <&vcc_sys>;
		vp3-supply = <&vcc_sys>;
		vp4-supply = <&vcc_sys>;
		inl1-supply = <&vcc_io>;
		inl2-supply = <&vcc_sys>;
		inl3-supply = <&vcc_20>;

		regulators {
			vcc_ddr: REG1 {
				regulator-name = "VCC_DDR";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};

			vcc_io: REG2 {
				regulator-name = "VCC_IO";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vdd_log: REG3 {
				regulator-name = "VDD_LOG";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
			};

			vcc_20: REG4 {
				regulator-name = "VCC_20";
				regulator-min-microvolt = <2000000>;
				regulator-max-microvolt = <2000000>;
				regulator-always-on;
			};

			vdd10_lcd: REG6 {
				regulator-name = "VDD10_LCD";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
				regulator-suspend-mem-disabled;
			};

			vcc_codec: REG8 {
				regulator-name = "VCC_CODEC";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				regulator-suspend-mem-disabled;
			};

			vccio_pmu: REG9 {
				regulator-name = "VCCIO_PMU";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vdd_10: REG10 {
				regulator-name = "VDD_10";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
			};

			vcc_18: REG11 {
				regulator-name = "VCC_18";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-suspend-mem-disabled;
			};

			vcc18_lcd: REG12 {
				regulator-name = "VCC18_LCD";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-suspend-mem-disabled;
			};
		};
	};
};

&i2c1 {
	status = "okay";
};

&i2c2 {
	status = "okay";

	rt5640: rt5640@1c {
		compatible = "realtek,rt5640";
		reg = <0x1c>;
		interrupt-parent = <&gpio6>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
		realtek,ldo1-en-gpios = <&gpio7 8 GPIO_ACTIVE_HIGH>;

		pinctrl-names = "default";
		pinctrl-0 = <&ldo1_en>;

	};
};

&i2c3 {
	status = "okay";
};

&i2c4 {
	status = "okay";

	hym8563@51 {
		compatible = "nxp,pcf8563";
		reg = <0x51>;

		interrupt-parent = <&gpio7>;
		interrupts = <5 IRQ_TYPE_EDGE_FALLING>;

		pinctrl-names = "default";
		pinctrl-0 = <&rtc_int>;

		#clock-cells = <0>;
		clock-output-names = "xin32k";
	};
};

&i2c5 {
	status = "okay";
};

&wdt {
	status = "okay";
};

&uart2 {
	status = "okay";
};

&tsadc {
	rockchip,hw-tshut-mode = <1>; /* tshut mode 0:CRU 1:GPIO */
	rockchip,hw-tshut-polarity = <1>; /* tshut polarity 0:LOW 1:HIGH */
	status = "okay";
};

&pinctrl {
/*	pinctrl-names = "default", "sleep";
	pinctrl-0 = <
		&global_pwroff
	>;
	pinctrl-1 = <
		&global_pwroff
	>;
*/
	pcfg_pull_none_drv_8ma: pcfg-pull-none-drv-8ma {
		drive-strength = <8>;
	};

	pcfg_pull_up_drv_8ma: pcfg-pull-up-drv-8ma {
		bias-pull-up;
		drive-strength = <8>;
	};

	pcfg_output_high: pcfg-output-high {
		output-high;
	};

	pcfg_output_low: pcfg-output-low {
		output-low;
	};

	buttons {
		pwrbtn: pwrbtn {
			rockchip,pins = <0 5 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	emmc {
		/*
		 * We run eMMC at max speed; bump up drive strength.
		 * We also have external pulls, so disable the internal ones.
		 */
		emmc_clk: emmc-clk {
			rockchip,pins = <3 18 RK_FUNC_2 &pcfg_pull_none_drv_8ma>;
		};

		emmc_cmd: emmc-cmd {
			rockchip,pins = <3 16 RK_FUNC_2 &pcfg_pull_none_drv_8ma>;
		};

		emmc_bus8: emmc-bus8 {
			rockchip,pins = <3 0 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 1 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 2 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 3 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 4 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 5 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 6 RK_FUNC_2 &pcfg_pull_none_drv_8ma>,
					<3 7 RK_FUNC_2 &pcfg_pull_none_drv_8ma>;
		};
	};

	gmac {
		phy_rst: phy-rst {
			rockchip,pins = <4 8 RK_FUNC_GPIO &pcfg_output_high>;
		};

		phy_pmeb: phy-pmeb {
			rockchip,pins = <0 8 RK_FUNC_GPIO &pcfg_pull_up>;
		};

		phy_int: phy-int {
			rockchip,pins = <0 9 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	reset_gpio: reset-gpio {
		wifi_reset: wifi-reset {
			rockchip,pins = <7 21 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		usb_hub_nreset: usb-hub-nreset {
			rockchip,pins = <8 3 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	rtc {
		rtc_int: rtc-int {
			rockchip,pins = <7 5 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	sdmmc {
		/*
		 * Default drive strength isn't enough to achieve even
		 * high-speed mode on EVB board so bump up to 8ma.
		 */
		sdmmc_bus4: sdmmc-bus4 {
			rockchip,pins = <6 16 RK_FUNC_1 &pcfg_pull_up_drv_8ma>,
					<6 17 RK_FUNC_1 &pcfg_pull_up_drv_8ma>,
					<6 18 RK_FUNC_1 &pcfg_pull_up_drv_8ma>,
					<6 19 RK_FUNC_1 &pcfg_pull_up_drv_8ma>;
		};

		sdmmc_clk: sdmmc-clk {
			rockchip,pins = <6 20 RK_FUNC_1 &pcfg_pull_none_drv_8ma>;
		};

		sdmmc_cmd: sdmmc-cmd {
			rockchip,pins = <6 21 RK_FUNC_1 &pcfg_pull_up_drv_8ma>;
		};

		sdmmc_pwr: sdmmc-pwr {
			rockchip,pins = <7 11 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	usb {
		host_vbus_drv: host-vbus-drv {
			rockchip,pins = <0 14 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	codec {
		hp_det: hp-det {
			rockchip,pins = <7 6 RK_FUNC_GPIO &pcfg_pull_up>;
		};

		mic_det: mic-det {
			rockchip,pins = <8 2 RK_FUNC_GPIO &pcfg_pull_up>;
		};

		ldo1_en: ldo1-en {
			rockchip,pins = <7 8 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
};

&usbphy {
	status = "okay";
};

&usb_otg {
	dr_mode = "host";
	status = "okay";
};

&usb_host0_ehci {
	status = "okay";
};

&usb_host1 {
	status = "okay";
};

&usb_hsic {
	status = "okay";
};

&vopb {
	status = "okay";
};

&vopb_mmu {
	status = "okay";
};

&vopl {
	status = "okay";
};

&vopl_mmu {
	status = "okay";
};
